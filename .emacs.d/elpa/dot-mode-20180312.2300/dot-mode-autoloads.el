;;; dot-mode-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from dot-mode.el

(autoload 'dot-mode-copy-to-last-kbd-macro "dot-mode" "\
Copy the current `dot-mode' command buffer to the `last-kbd-macro' variable.
Then it can be called with `call-last-kbd-macro', named with
`name-last-kbd-macro', or even saved for later use with
`name-last-kbd-macro'" t)
(autoload 'dot-mode-execute "dot-mode" "\
Execute stored commands." t)
(autoload 'dot-mode-override "dot-mode" "\
Unconditionally store next keystroke." t)
(autoload 'dot-mode "dot-mode" "\
Dot mode mimics the `.' function in vi, repeating sequences of

commands and/or typing delimited by motion events.  Use `C-.'
rather than just `.'.

This is a minor mode.  If called interactively, toggle the `Dot
mode' mode.  If the prefix argument is positive, enable the mode,
and if it is zero or negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `dot-mode'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(autoload 'dot-mode-on "dot-mode" "\
Turn on dot-mode." t)
(defalias 'turn-on-dot-mode 'dot-mode-on)
(put 'global-dot-mode 'globalized-minor-mode t)
(defvar global-dot-mode nil "\
Non-nil if Global Dot mode is enabled.
See the `global-dot-mode' command
for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `global-dot-mode'.")
(custom-autoload 'global-dot-mode "dot-mode" nil)
(autoload 'global-dot-mode "dot-mode" "\
Toggle Dot mode in all buffers.
With prefix ARG, enable Global Dot mode if ARG is positive; otherwise,
disable it.

If called from Lisp, toggle the mode if ARG is `toggle'.
Enable the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

Dot mode is enabled in all buffers where `dot-mode-on' would do it.

See `dot-mode' for more information on Dot mode.

(fn &optional ARG)" t)
(register-definition-prefixes "dot-mode" '("dot-mode-"))

;;; End of scraped data

(provide 'dot-mode-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; dot-mode-autoloads.el ends here
